name: openghg_defs tests

on:
  push:
    branches: [main]
    tags:
    - '*'
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        python-version: ["3.9"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dev dependencies
      run: |
        pip install --upgrade pip wheel setuptools
        pip install -r requirements-dev.txt
    - name: Lint with ruff
      run: |
        ruff openghg_defs/
    - name: Run mypy
      run: |
        mypy --python-version ${{ matrix.python-version }} openghg_defs/
    - name: Run install
      run: |
        pip install .
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      run: |
        curl -s https://codecov.io/bash > codecov;
        VERSION=$(grep -o 'VERSION=\"[0-9\.]*\"' codecov | cut -d'"' -f2);
        for i in 1 256 512
        do
          shasum -a $i -c --ignore-missing <(curl -s "https://raw.githubusercontent.com/codecov/codecov-bash/${VERSION}/SHA${i}SUM") ||
          shasum -a $i -c <(curl -s "https://raw.githubusercontent.com/codecov/codecov-bash/${VERSION}/SHA${i}SUM")
        done
        bash codecov || echo "Codecov did not collect coverage reports"
  release_pypi:
    name: Build and publish Python distributions ðŸ“¦ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs: ["test"]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install pypa/build
        run: |
          pip install --upgrade build wheel
      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}