name: openghg_defs workflow

on:
  push:
    tags:
      - "*"
  pull_request:
    branches: [main, devel]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.11 + uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: uv sync

      - name: Run tests
        run: uv run pytest .

  release_testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, '-') && contains(github.ref_name, '.')
    environment:
      name: testpypi
      url: https://test.pypi.org/p/openghg-defs
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python + uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: "3.11"

      - name: Build distributions
        run: uv build

      - name: Publish to Test PyPI (via Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1

  release_pypi:
    name: Build and publish Python distributions 📦 to PyPI (PEP 621, Trusted Publishing)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, '-') && contains(github.ref_name, '.')
    environment: 
      name: pypi
      url: https://pypi.org/p/openghg-defs
    permissions:
      id-token: write  # Required for Trusted Publishing

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python + uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: "3.11"

      - name: Build distributions
        run: uv build

      - name: Publish to PyPI (via Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1

  release_conda:
    name: Build and publish conda package
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v5
      - uses: mamba-org/setup-micromamba@v2
        with:
          init-shell: bash
      - name: Set GIT_TAG (strip leading 'v' if present)
        id: set_tag
        run: |
          RAW_TAG="${GITHUB_REF_NAME}"
          CLEAN_TAG="${RAW_TAG#v}"
          echo "GIT_TAG=${CLEAN_TAG}" >> $GITHUB_ENV
          echo "Using GIT_TAG=${CLEAN_TAG}"

      - name: Build and push the conda package for openghg_defs
        run: |
          micromamba create -n openghg_defs_build anaconda-client boa conda-verify -c conda-forge
          micromamba activate openghg_defs_build
          conda config --append channels openghg
          mkdir ${{ github.workspace }}/build
          conda mambabuild --croot ${{ github.workspace }}/build recipes -c conda-forge
        env:
          GIT_TAG: ${{ github.ref_name }}
      - name: Publish build to Anaconda for openghg_defs
        run: |
          micromamba activate openghg_defs_build
          BUILD_DIR=${GITHUB_WORKSPACE}/build
          BUILD=$(find "$BUILD_DIR" -name '*.tar.bz2')
          anaconda --token "$ANACONDA_TOKEN" upload --user openghg --label main "$BUILD"
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          GIT_TAG: ${{ github.ref_name }}